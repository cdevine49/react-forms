// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TextInput aria-describedby accepts both error id and underline id 1`] = `
<div
  className="input-container"
>
  <input
    aria-describedby="error-id underline-id"
    aria-invalid={false}
    aria-required={false}
    className={undefined}
    id={undefined}
  />
</div>
`;

exports[`TextInput className 1`] = `
<div
  className="input-container"
>
  <input
    aria-describedby={undefined}
    aria-invalid={false}
    aria-required={false}
    className="big and fat"
    id={undefined}
  />
</div>
`;

exports[`TextInput containerProps 1`] = `
<div
  className="input-container classy react"
  id="container"
  style={
    Object {
      "margin": "10px",
    }
  }
>
  <input
    aria-describedby={undefined}
    aria-invalid={false}
    aria-required={false}
    className={undefined}
    id={undefined}
  />
</div>
`;

exports[`TextInput default 1`] = `
<div
  className="input-container"
>
  <input
    aria-describedby={undefined}
    aria-invalid={false}
    aria-required={false}
    className={undefined}
    id={undefined}
  />
</div>
`;

exports[`TextInput errorMessage 1`] = `
<div
  className="input-container"
>
  <input
    aria-describedby={undefined}
    aria-invalid={true}
    aria-required={false}
    className="not overridden error"
    id={undefined}
  />
  <p
    className="error-message"
    id={undefined}
    role="alert"
  >
    Ya dun goofed
  </p>
</div>
`;

exports[`TextInput errorProps 1`] = `
<div
  className="input-container"
>
  <input
    aria-describedby="error-tag"
    aria-invalid={true}
    aria-required={false}
    className="error"
    id={undefined}
  />
  <p
    className="error-message more classes"
    data-message="hi there"
    id="error-tag"
    role="alert"
  >
    Uh oh
  </p>
</div>
`;

exports[`TextInput id 1`] = `
<div
  className="input-container"
>
  <label
    htmlFor="first-name"
  >
    First Name
  </label>
  <input
    aria-describedby={undefined}
    aria-invalid={false}
    aria-required={false}
    className={undefined}
    id="first-name"
  />
</div>
`;

exports[`TextInput label 1`] = `
<div
  className="input-container"
>
  <label
    htmlFor={undefined}
  >
    Child/Text
  </label>
  <input
    aria-describedby={undefined}
    aria-invalid={false}
    aria-required={false}
    className={undefined}
    id={undefined}
  />
</div>
`;

exports[`TextInput labelProps 1`] = `
<div
  className="input-container"
>
  <label
    className="right large name"
    htmlFor={undefined}
    id="my-label"
    style={
      Object {
        "fontSize": "16px",
      }
    }
  >
    Last Name
  </label>
  <input
    aria-describedby={undefined}
    aria-invalid={false}
    aria-required={false}
    className={undefined}
    id={undefined}
  />
</div>
`;

exports[`TextInput other props 1`] = `
<div
  className="input-container"
>
  <input
    aria-describedby={undefined}
    aria-invalid={false}
    aria-required={false}
    className={undefined}
    data-key="input-key"
    id={undefined}
    onFocus={[Function]}
    style={
      Object {
        "padding": "25px 15px",
      }
    }
  />
</div>
`;

exports[`TextInput required 1`] = `
<div
  className="input-container"
>
  <label
    htmlFor={undefined}
  >
    Gets an Asterisk
    <span
      className="required"
    >
      *
    </span>
  </label>
  <input
    aria-describedby={undefined}
    aria-invalid={false}
    aria-required={true}
    className={undefined}
    id={undefined}
  />
</div>
`;

exports[`TextInput underline 1`] = `
<div
  className="input-container"
>
  <input
    aria-describedby={undefined}
    aria-invalid={false}
    aria-required={false}
    className={undefined}
    id={undefined}
  />
  <p
    className="underline"
    id={undefined}
  >
    More explanation
  </p>
</div>
`;

exports[`TextInput underlineProps 1`] = `
<div
  className="input-container"
>
  <input
    aria-describedby="underline-tag"
    aria-invalid={false}
    aria-required={false}
    className={undefined}
    id={undefined}
  />
  <p
    className="underline help explain"
    id="underline-tag"
    style={
      Object {
        "background": "blue",
      }
    }
  >
    Fill this in because ...
  </p>
</div>
`;
